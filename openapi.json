{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "eti@cisco.io",
      "name": "API Support"
    },
    "description": "This is a Kosha REST serice for exposing many airtable features as REST APIs with better consistency, observability etc",
    "termsOfService": "http://swagger.io/terms/",
    "title": "Airtable Connector API",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/v0/meta/bases": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BasesStruct"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Bases"
        ],
        "description": "Get Bases",
        "summary": "Get airtable"
      }
    },
    "/v0/meta/bases/{baseId}/tables": {
      "post": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BasesStruct"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Records"
        ],
        "description": "Create Bases",
        "summary": "Create Bases"
      }, 
      "put": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BasesStruct"
                }
              }
            },
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.BasesStruct"
              }
            }
          }
        },

        "tags": [
          "Bases"
        ],
        "description": "Update Bases",
        "summary": "Update Bases"
      }

    },

    "/v0/meta/bases/{baseId}/tables/{tableId}/fields": {
      "post": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Table Id",
            "in": "path",
            "name": "tableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Field"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Fields"
        ],
        "description": "Create Fields",
        "summary": "Create Fields"
      }, 
      "put": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },{
            "description": "Table Id",
            "in": "path",
            "name": "tableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Field"
                }
              }
            },
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.Field"
              }
            }
          }
        },

        "tags": [
          "Fields"
        ],
        "description": "Update Fields",
        "summary": "Update Fields"
      }

    },
    "/v0/specification/list": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "bad request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "permission denied"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "internal server error"
          }
        },
        "tags": [
          "specification"
        ],
        "description": "Get all environment variables that need to be supplied",
        "summary": "Get details of the connector specification"
      }
    },
    "/v0/{baseId}/{tableIdOrName}/{recordId}": {
      "get": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Table Id",
            "in": "path",
            "name": "tableIdOrName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Record Id",
            "in": "path",
            "name": "recordId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Record"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Records"
        ],
        "description": "Get Records",
        "summary": "Get Record"
      }, 
    "delete": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Table Id",
            "in": "path",
            "name": "tableIdOrName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Record Id",
            "in": "path",
            "name": "recordId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Record"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Records"
        ],
        "description": "Delete Records",
        "summary": "Delete Record"
      }, 

      "put": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Table Id",
            "in": "path",
            "name": "tableIdOrName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Record Id",
            "in": "path",
            "name": "recordId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Record"
                }
              }
            },
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.Record"
              }
            }
          }
        },

        "tags": [
          "Records"
        ],
        "description": "Update Records",
        "summary": "Update Record"
      }

    },
    "/v0/{baseId}/{tableIdOrName}": {
      "post": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Table Id",
            "in": "path",
            "name": "tableIdOrName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Record"
                }
              }
            },
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.Record"
              }
            }
          }
        },
        
        "tags": [
          "Records"
        ],
        "description": "Create Records",
        "summary": "Creates records"
      }
      
    },
    "/v0/{baseId}/{tableIdOrName}/{recordId}/comments": {
      "get": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Table Id",
            "in": "path",
            "name": "tableIdOrName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Base Id",
            "in": "path",
            "name": "recordId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.CommentStruct"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Comments"
        ],
        "description": "Get Comments",
        "summary": "Get airtable"
      }
    },
    
    "/v0/{baseId}/{tableId}": {
      "get": {
        "parameters": [
          {
            "description": "Base Id",
            "in": "path",
            "name": "baseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Table Id",
            "in": "path",
            "name": "tableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.RecordsStruct"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Records"
        ],
        "description": "Get Records",
        "summary": "Get airtable"
      }
    }
  },
  "components": {
    "requestBodies": {
      "models.Record": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/models.Record"
            }
          }
        },
        "description": "Enter project risk properties"
      }
    },
    "schemas": {
      "models.BasesStruct": {
        "properties": {
          "bases": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "permissionLevel": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "offset": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.CommentStruct": {
        "properties": {
          "comments": {
            "items": {
              "properties": {
                "author": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "createdTime": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "lastUpdatedTime": {},
                "mentioned": {
                  "properties": {
                    "userId": {
                      "properties": {
                        "displayName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "text": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "offset": {}
        },
        "type": "object"
      },
      "models.Field": {
        "properties": {
          "End date": {
            "type": "string"
          },
          "Field 3": {
            "type": "string"
          },
          "Field 4": {
            "type": "string"
          },
          "Projects": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.Record": {
        "properties": {
          "createdTime": {
            "type": "string"
          },
          "fields": {
            "$ref": "#/components/schemas/models.Field"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.RecordsStruct": {
        "properties": {
          "records": {
            "items": {
              "properties": {
                "createdTime": {
                  "type": "string"
                },
                "fields": {
                  "properties": {
                    "End date": {
                      "type": "string"
                    },
                    "Field 3": {
                      "type": "string"
                    },
                    "Field 4": {
                      "type": "string"
                    },
                    "Projects": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  }
}